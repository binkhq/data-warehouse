version: 2

models:
    - name: fact_transaction
      description: "Table containing transaction events"
      schema: 'Bink'
      config:
        elementary:
          timestamp_column: inserted_date_time
      columns:
        - name: 'EVENT_ID'
          description: Primary Key of the table
          quote: true
          tests:
            - unique
            - not_null
        - name: 'TRANSACTION_ID'
          description: Busineess PK of the table
          quote: true
          tests:
            - not_null
        - name: 'USER_ID'
          description: Transaction User
          quote: true
          tests:
            - not_null
            - relationships:
                to: ref('dim_user')
                field: USER_ID
        - name: 'PAYMENT_ACCOUNT_ID'
          description: Transaction payment account
          quote: true
          tests:
            - not_null
            - relationships:
                to: ref('dim_payment_account')
                field: PAYMENT_ACCOUNT_ID
        - name: 'LOYALTY_CARD_ID'
          description: Transaction loyalty card account
          quote: true
          tests:
            - not_null
            - relationships:
                to: ref('dim_loyalty_card')
                field: LOYALTY_CARD_ID
        - name: 'MERCHANT_ID'
          description: Links to merchant dim
          quote: true
          tests:
            - not_null
            # - relationships: --this needs to be fixed and reinstated
            #     to: ref('dim_merchant')
            #     field: MERCHANT_ID
        - name: 'SPEND_AMOUNT'
          tests:
            - not_null
            - elementary.column_anomalies
        - name: 'SPEND_CURRENCY'
          description: GBP
          quote: true
          tests:
            - sd_daily_spike:
                vals: ['GBP']
                datetime_col: EVENT_DATE_TIME
                unique_id_col: EVENT_ID
                max_sd: 2
                config:
                  severity: warn
                  # error_if: ">1000"
                  # warn_if: ">10"


    - name: dim_date
      description: "A dimension table For dates / calendars"
      schema: 'Bink'
      columns:
        - name: 'DATE'
          description: Primary Key of the table
          quote: true
          tests:
            - unique
            - not_null

    - name: dim_channel
      description: "A dimension table containing client data, realting to the channel field in events"
      schema: 'Bink'
      columns:
        - name: 'CHANNEL_ID'
          description: Primary Key of the table
          quote: true
          tests:
            - unique
            - not_null

    - name: fact_user
      description: "Table containing events for user creation / deletion"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: Unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'EVENT_TYPE'
          description: Created or deleted
          quote: true 
          tests:
            - not_null
            - accepted_values:
                values: ['CREATED', 'DELETED', 'REFRESH']
            - sd_daily_spike:
                vals: ['CREATED']
                datetime_col: EVENT_DATE_TIME
                unique_id_col: EVENT_ID
                max_sd: 2
                config:
                  severity: warn
                  # error_if: ">1000"
                  # warn_if: ">10"                
            - sd_daily_spike:
                vals: ['DELETED']
                datetime_col: EVENT_DATE_TIME
                unique_id_col: EVENT_ID
                max_sd: 2
                config:
                  severity: warn
                  # error_if: ">1000"
                  # warn_if: ">10"                
        - name: USER_ID
          description: Business PK
          quote: true
          tests:
            - not_null
            # - relationships:
            #     to: ref('dim_user')
            #     field: USER_ID

    - name: dim_user
      description: "User table containing current and historical users"
      schema: 'Bink'
      columns:
        - name: 'USER_ID'
          description: Primary Key of the table
          quote: true
          tests:
            - unique
            - not_null
        
    - name: dim_payment_account
      description: "Table containing payment accounts"
      schema: 'Bink'
      columns:
        - name: 'PAYMENT_ACCOUNT_ID'
          description: Primary Key of the table
          quote: true
          tests:
            - unique
            - not_null
        
    - name: dim_loyalty_card
      description: "This is a dimension table containing loyalty card information "
      schema: 'Bink'
      columns:
        - name: 'LOYALTY_CARD_ID'
          description: Primary Key of the table
          quote: true
          tests:
            - unique
            - not_null

    - name: dim_merchant
      description: "This is a dimension table containing merchant information "
      schema: 'Bink'
      columns:
        - name: 'MERCHANT_ID'
          description: Primary Key of the table
          quote: true
          tests:
            - unique
            - not_null

    - name: fact_payment_account
      description: "Table containing events for payment account creation / removal"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'EVENT_TYPE'
          description: Created or removed
          quote: true 
          tests:
            - not_null
            - accepted_values:
                values: ['ADDED', 'REMOVED']
            - sd_daily_spike:
                vals: ['ADDED']
                datetime_col: EVENT_DATE_TIME
                unique_id_col: EVENT_ID
                max_sd: 2
                config:
                  severity: warn
                  # error_if: ">1000"
                  # warn_if: ">10"                
            - sd_daily_spike:
                vals: ['REMOVED']
                datetime_col: EVENT_DATE_TIME
                unique_id_col: EVENT_ID
                max_sd: 2
                config:
                  severity: warn
                  # error_if: ">1000"
                  # warn_if: ">10"
        - name: 'STATUS'
          description: Mapping from payment account status mapping
          quote: true 
          tests:
            - not_null
        - name: 'PAYMENT_ACCOUNT_ID'
          description: Payment account id
          quote: true 
          tests:
            - not_null
            - relationships:
                to: ref('dim_payment_account')
                field: PAYMENT_ACCOUNT_ID

    - name: fact_payment_account_status_change
      description: "Table containing events for payment account status change"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'PAYMENT_ACCOUNT_ID'
          description: Payment account id
          quote: true 
          tests:
            - not_null
            # - relationships:
            #     to: ref('fact_payment_account')
            #     field: PAYMENT_ACCOUNT_ID
        - name: 'TO_STATUS'
          description: Mapping from payment account status mapping
          quote: true 
          tests:
            - not_null

    - name: fact_loyalty_card_add_auth
      description: "Table containing events for loyalty card addition and authorisation"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'EVENT_TYPE'
          description: Request / Success / Failure
          quote: true 
          tests:
            - not_null
            - accepted_values:
                values: ['REQUEST', 'FAILED', 'SUCCESS']
            # - consecutive_events_group:
            #     created_val: 'SUCCESS'
            #     datetime_col: EVENT_DATE_TIME
            #     group_cols: [USER_ID, MERCHANT_ID]
        - name: 'LOYALTY_CARD_ID'
          description: loyalty card id
          quote: true 
          tests:
            - not_null
            - relationships:
                to: ref('dim_loyalty_card')
                field: LOYALTY_CARD_ID

    - name: fact_loyalty_card_auth
      description: "Table containing events for loyalty card authorisation"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'EVENT_TYPE'
          description: Request / Success / Failure
          quote: true 
          tests:
            - not_null
            - accepted_values:
                values: ['REQUEST', 'FAILED', 'SUCCESS']
        - name: 'LOYALTY_CARD_ID'
          description: loyalty card id blah
          quote: true 
          tests:
            - not_null
            - relationships:
                to: ref('dim_loyalty_card')
                field: LOYALTY_CARD_ID

    - name: fact_loyalty_card_join
      description: "Table containing events for loyalty card join"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'EVENT_TYPE'
          description: Request / Success / Failure
          quote: true 
          tests:
            - not_null
            - accepted_values:
                values: ['REQUEST', 'FAILED', 'SUCCESS']
        - name: 'LOYALTY_CARD_ID'
          description: loyalty card id blah
          quote: true 
          tests:
            - not_null
            - relationships:
                to: ref('dim_loyalty_card')
                field: LOYALTY_CARD_ID

    - name: fact_loyalty_card_register
      description: "Table containing events for loyalty card register"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'EVENT_TYPE'
          description: Request / Success / Failure
          quote: true 
          tests:
            - not_null
            - accepted_values:
                values: ['REQUEST', 'FAILED', 'SUCCESS']
        - name: 'LOYALTY_CARD_ID'
          description: loyalty card id
          quote: true 
          tests:
            - not_null
            - relationships:
                to: ref('dim_loyalty_card')
                field: LOYALTY_CARD_ID

    - name: fact_loyalty_card_removed
      description: "Table containing events for loyalty card being removed from wallet"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'LOYALTY_CARD_ID'
          description: loyalty card id
          quote: true 
          tests:
            - not_null
            - relationships:
                to: ref('dim_loyalty_card')
                field: LOYALTY_CARD_ID

    - name: fact_loyalty_card_status_change
      description: "Table containing events for loyalty card status change"
      schema: 'Bink'
      columns:
        - name: EVENT_ID
          description: unique event ID
          quote: true
          tests:
            - unique
            - not_null
        - name: 'LOYALTY_CARD_ID'
          description: loyalty card id
          quote: true 
          tests:
            - not_null
            - relationships:
                to: ref('dim_loyalty_card')
                field: LOYALTY_CARD_ID
        - name: 'TO_STATUS'
          description: status description
          quote: true 
          tests:
            # - not_null
            - sd_daily_spike:
                vals: ['Invalid credentials', 'Cannot connect, too many retries', 'Account already exists']
                datetime_col: EVENT_DATE_TIME
                unique_id_col: EVENT_ID
                max_sd: 2
                config:
                  severity: warn
                  # error_if: ">1000"
                  # warn_if: ">10"                

    - name: join_loyalty_card_payment_account
      description: Joins the loyalty_card and payment cards with PLL links
      schema: 'Bink'
      columns:
        - name: 'PLL_LINK_PK'
          description: Primary Key of the table created as an aggregate
          quote: true
          tests:
            # - unique
            - not_null
          


    - name: fact_voucher
      description: ""
      tests:
        - dbt_utils.unique_combination_of_columns:
            combination_of_columns:
              - voucher_code
              - loyalty_card_id
        - unique:
            column_name: "(voucher_code || '-' || loyalty_card_id)"

      columns:
        - name: voucher_code 
          description: "part surogate key for asos vouchers"
   


        - name: loyalty_card_id
          description: "FK to dim loyalty card table"
          tests:
            - relationships:
                to: ref('dim_loyalty_card')
                field: LOYALTY_CARD_ID

        - name: loyalty_plan_id
          description: "loyalty plan id"

        - name: state
          description: "state of voucher"

        - name: voucher_type
          description: "voucher type"

        - name: date_redeemed
          description: "date the voucher was redeemed not tracked for asos "

        - name: date_issued
          description: "date voucher was  issued "

        - name: expiry_date
          description: "expirary date on voucher "

        - name: redemption_tracked
          description: "can we track voucher redemptions"

        - name: time_to_redemption
          description: "length of time until redemption"
          tests:
          - dbt_utils.expression_is_true:
              expression: '>= 0'
              
        - name: days_left_on_vouchers
          description: " days left on vouchers that can be tracked"
          tests:
          - dbt_utils.expression_is_true:
              expression: '>= 0'


        - name: days_valid_for
          description: "days the voucher is valid for when issued"
          tests:
          - dbt_utils.expression_is_true:
              expression: '>= 0'
              

    - name: Dim_loyalty_card_active_scd
      description: ""
      tests:
        - dbt_utils.unique_combination_of_columns:
            combination_of_columns:
              - user_id
              - loyalty_card_id
              - channel
              - valid_from
              - valid_to
        - unique:
            column_name: "(valid_to|| '-' || loyalty_card_id || '-' || user_id || '-' || channel || '-' || valid_from )"
      columns:
        - name: loyalty_card_id
          description: ""

        - name: user_id
          description: ""

        - name: channel
          description: ""

        - name: removed
          description: ""

        - name: valid_from
          description: ""

        - name: valid_to
          description: ""
